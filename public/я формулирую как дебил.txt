синтаксис
    не надо ставить фигурные скобки, вложенность определяется отступом строки
    не надо ставить в конце точку с запятой, перенос строки и есть ее конец
    переменная объявляется с помощью конструкции public тип_переменной имя_переменной: значение_переменной
    тип переменной начинается с прописной буквы
    чтобы взять значение переменной, чтобы задать значение параметра UI-компонента, нужно заключить имя переменной в двойные фигурные скобки {{имя_переменной}}
    функции можно задавать тремя способами:
        1. <имя_функции>: function () {}
        2. <имя_функции>: ()->{}
        3. <имя_функции>: ()=>{}


html
    отсутствуют маргины
    для того, чтобы задать ширину слайдеру, его нужно положить в контейнер и уже контейнеру задать желаемую ширину

как начать
    в файле обязательно должна быть объявлена часть def Page main, в которой происходит основной код. так же с помощью
    команды def можно объявлять составные объекты LogicalComponent, UIComponent и другие.

div
    новый div объявляется следующим образом:
    def Page main
        ...
        div
            свойство_div: значение_свойства
        ...

    div имеет следующие свойства: background, padding, height, width, border, position, border-radius, top, bottom, left, right,
    transform, rotation, transition, scale, skew, margin, color, float, overflow, transform-origin, scroll.
    несколько следующих друг за другом объектов div располагаются один под другим при отображении, но можно расположить их и
    один за другим слева направо, если вложить их в контейнер HBox.
    если при повороте объекта div он выходит за край отведенной для него прямоугольной области, то вышедшая за край часть
    становится невидимой (не отображается).
    в div можно записать текст, для этого код должен быть следующего вида
    div: some text here
    в данном примере в объекте div будет отображена надпись "some text here"
    также в качестве текста можно передать значение какой-либо переменной
    div: {{setLeft.background}}
    в данном примере будет отображено значение, которым задан цвет (например, #bbbbdd)

span
    новый span объявляется аналогично div:
    def Page main
        ...
        span
            свойство_span: значение_свойства
        ...

    span имеет следующие свойства: background, padding, border, position, border-radius, top, bottom, left, right, margin,
    color, float.
    несколько следующих друг за другом объектов span располагаются один за другим без зазоров (если не заданы отступы)
    при отображении.
    в span можно записать текст, для этого код должен быть следующего вида
    span: some text here
    в данном примере в объекте span будет отображена надпись "some text here"
    также в качестве текста можно передать значение какой-либо переменной
    span: {{setLeft.background}}
    в данном примере будет отображено значение, которым задан цвет (например, #bbbbdd)

MaskedInput //in process
    имеет следующие свойства: mask, background, padding, height, width, border, position, border-radius, top, bottom,
    left, right, transform, rotation, transition, scale, skew, margin, color, float, transform-origin.
    в параметре mask задается формат маски. для этого используются следующие символы: 'd'(/[0-9]/), 'c'(/[a-z]/), 'C'(/[A-Z]/),
    'i'(/[a-zA-Z]/), '*'(/[\w]/). чтобы задать, например, маску для ввода номера телефона, можно написать так:
    mask: '(ddd) ddd-dddd'
    в span можно записать текст, для этого код должен быть следующего вида
    MaskedInput: some text here
    если передаваемая строка не подходит по формату содержимого к маске, при загрузке страницы она тем не менее будет выведена
    если не задать ширину элемента, он будет растянут на всю доступную ширину
    несколько следующих друг за другом объектов MaskedInput располагаются один под другим при отображении, но можно расположить
    их и один за другим слева направо, если вложить их в контейнер HBox.
    фоновый цвет background задается не для самого поля ввода, а для пространства за ним, которое будет видно при наличии
    внутренних отступов, само же поле ввода белое

ListBox
    имеет следующие свойства: itemTemplate, itemSource, background, padding, height, width, border, position, border-radius,
    top, bottom, left, right, transform, rotation, transition, scale, skew, margin, color, float, transform-origin.
    в параметр itemTemplate кладется элемент, способный содержать текст (это может быть div, span, a или даже input). поля
    указанного здесь типа будут генерироваться как пункты ListBox с содержимым, передаваемым туда из itemSource, в котором
    содержится массив объектов с необходимыми ключами.
    например, код для ListBox может быть таким:
    itemTemplate:
        span: {{name}}
    itemSource: [
        {name:'Кремль'},
        {name:'Поклонная гора'},
        {name:'Офис Квокки'},
        {name:'Железнодорожное кольцо'}
    ]

 WrapPanel: require('./Base/Components/UI/WrapPanel'),
            HBox: require('./Base/Components/UI/HBox'),
            NumberKeyboard: require('./Base/Components/UI/NumberKeyboard'),
            Slider: require('./Base/Components/UI/Slider'),
            Page: require('./Base/Components/UI/Page'),
            VBox: require('./Base/Components/UI/VBox'),
            Image: require('./Base/Components/UI/Image'),
            GeoMap: require('./Base/Components/UI/GeoMap'),
            Checkbox: require('./Base/Components/UI/Checkbox'),


TextBox
    аналог input

Page
    компонент, который содержит document.body и нужен для объявления страницы def Page main

Image
    этому компоненту обязательно нужно задать параметры height, width и source, а также рекомендуется задать значение параметра
    stretch.